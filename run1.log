Pre-computing smallest completions...
Defines treeweight of p as 1.000000
Defines treeweight of q as 5.000000
Defines treeweight of final as 6.000000
Defines weight of q as 1.000000
Defines weight of p as 5.000000
Smallest completions done (took 13 milliseconds).
Running BestTrees version 2...
Dequeues tree Tree: a RunWeight: 1.000000 Delta weight: 6.000000 Resulting state: p
For rule p -> a # 1.000000
Expand for p with Tree: a RunWeight: 1.000000 Delta weight: 6.000000 Resulting state: p
Dequeues tree Tree: f(a a) RunWeight: 5.000000 Delta weight: 6.000000 Resulting state: q
For rule q -> f(p p) # 3.000000
Expand for q with Tree: f(a a) RunWeight: 5.000000 Delta weight: 6.000000 Resulting state: q
Dequeues tree Tree: g(f(a a)) RunWeight: 6.000000 Delta weight: 6.000000 Resulting state: final
For rule final -> g(q) # 1.000000
OUTPUT Tree: g(f(a a)) RunWeight: 6.000000 Delta weight: 6.000000 Resulting state: final
Expand for final with Tree: g(f(a a)) RunWeight: 6.000000 Delta weight: 6.000000 Resulting state: final
Dequeues tree Tree: a RunWeight: 10.000000 Delta weight: 11.000000 Resulting state: q
For rule q -> a # 10.000000
Expand for q with Tree: a RunWeight: 10.000000 Delta weight: 11.000000 Resulting state: q
Dequeues tree Tree: g(a) RunWeight: 11.000000 Delta weight: 11.000000 Resulting state: final
For rule final -> g(q) # 1.000000
OUTPUT Tree: g(a) RunWeight: 11.000000 Delta weight: 11.000000 Resulting state: final
Expand for final with Tree: g(a) RunWeight: 11.000000 Delta weight: 11.000000 Resulting state: final
Dequeues tree Tree: f(f(a a) f(a a)) RunWeight: 11.000000 Delta weight: 16.000000 Resulting state: p
For rule p -> f(q q) # 1.000000
Expand for p with Tree: f(f(a a) f(a a)) RunWeight: 11.000000 Delta weight: 16.000000 Resulting state: p
Dequeues tree Tree: f(a f(f(a a) f(a a))) RunWeight: 15.000000 Delta weight: 16.000000 Resulting state: q
For rule q -> f(p p) # 3.000000
Expand for q with Tree: f(a f(f(a a) f(a a))) RunWeight: 15.000000 Delta weight: 16.000000 Resulting state: q
Dequeues tree Tree: f(f(f(a a) f(a a)) a) RunWeight: 15.000000 Delta weight: 16.000000 Resulting state: q
For rule q -> f(p p) # 3.000000
Expand for q with Tree: f(f(f(a a) f(a a)) a) RunWeight: 15.000000 Delta weight: 16.000000 Resulting state: q
Dequeues tree Tree: g(f(a f(f(a a) f(a a)))) RunWeight: 16.000000 Delta weight: 16.000000 Resulting state: final
For rule final -> g(q) # 1.000000
OUTPUT Tree: g(f(a f(f(a a) f(a a)))) RunWeight: 16.000000 Delta weight: 16.000000 Resulting state: final
Expand for final with Tree: g(f(a f(f(a a) f(a a)))) RunWeight: 16.000000 Delta weight: 16.000000 Resulting state: final
Dequeues tree Tree: g(f(f(f(a a) f(a a)) a)) RunWeight: 16.000000 Delta weight: 16.000000 Resulting state: final
For rule final -> g(q) # 1.000000
OUTPUT Tree: g(f(f(f(a a) f(a a)) a)) RunWeight: 16.000000 Delta weight: 16.000000 Resulting state: final
Expand for final with Tree: g(f(f(f(a a) f(a a)) a)) RunWeight: 16.000000 Delta weight: 16.000000 Resulting state: final
Dequeues tree Tree: f(f(a a) a) RunWeight: 16.000000 Delta weight: 21.000000 Resulting state: p
For rule p -> f(q q) # 1.000000
Expand for p with Tree: f(f(a a) a) RunWeight: 16.000000 Delta weight: 21.000000 Resulting state: p
Dequeues tree Tree: f(a f(a a)) RunWeight: 16.000000 Delta weight: 21.000000 Resulting state: p
For rule p -> f(q q) # 1.000000
Expand for p with Tree: f(a f(a a)) RunWeight: 16.000000 Delta weight: 21.000000 Resulting state: p
Dequeues tree Tree: f(f(a a) f(a f(f(a a) f(a a)))) RunWeight: 21.000000 Delta weight: 26.000000 Resulting state: p
For rule p -> f(q q) # 1.000000
Expand for p with Tree: f(f(a a) f(a f(f(a a) f(a a)))) RunWeight: 21.000000 Delta weight: 26.000000 Resulting state: p
Dequeues tree Tree: f(f(a a) f(f(f(a a) f(a a)) a)) RunWeight: 21.000000 Delta weight: 26.000000 Resulting state: p
For rule p -> f(q q) # 1.000000
Expand for p with Tree: f(f(a a) f(f(f(a a) f(a a)) a)) RunWeight: 21.000000 Delta weight: 26.000000 Resulting state: p
Dequeues tree Tree: f(a a) RunWeight: 21.000000 Delta weight: 26.000000 Resulting state: p
For rule p -> f(q q) # 1.000000
Expand for p with Tree: f(a a) RunWeight: 21.000000 Delta weight: 26.000000 Resulting state: p
Dequeues tree Tree: f(f(a f(f(a a) f(a a))) f(a a)) RunWeight: 21.000000 Delta weight: 26.000000 Resulting state: p
For rule p -> f(q q) # 1.000000
Expand for p with Tree: f(f(a f(f(a a) f(a a))) f(a a)) RunWeight: 21.000000 Delta weight: 26.000000 Resulting state: p
Dequeues tree Tree: f(f(f(f(a a) f(a a)) a) f(a a)) RunWeight: 21.000000 Delta weight: 26.000000 Resulting state: p
For rule p -> f(q q) # 1.000000
Expand for p with Tree: f(f(f(f(a a) f(a a)) a) f(a a)) RunWeight: 21.000000 Delta weight: 26.000000 Resulting state: p
Dequeues tree Tree: f(f(f(a a) f(a a)) f(f(a a) f(a a))) RunWeight: 25.000000 Delta weight: 26.000000 Resulting state: q
For rule q -> f(p p) # 3.000000
Expand for q with Tree: f(f(f(a a) f(a a)) f(f(a a) f(a a))) RunWeight: 25.000000 Delta weight: 26.000000 Resulting state: q
Dequeues tree Tree: f(a f(f(a a) a)) RunWeight: 20.000000 Delta weight: 21.000000 Resulting state: q
For rule q -> f(p p) # 3.000000
Expand for q with Tree: f(a f(f(a a) a)) RunWeight: 20.000000 Delta weight: 21.000000 Resulting state: q
AJAJ: current weight=25.000000 new weight=20.000000
Dequeues tree Tree: f(a f(a f(a a))) RunWeight: 20.000000 Delta weight: 21.000000 Resulting state: q
For rule q -> f(p p) # 3.000000
Expand for q with Tree: f(a f(a f(a a))) RunWeight: 20.000000 Delta weight: 21.000000 Resulting state: q
Dequeues tree Tree: f(f(f(a a) a) a) RunWeight: 20.000000 Delta weight: 21.000000 Resulting state: q
For rule q -> f(p p) # 3.000000
Expand for q with Tree: f(f(f(a a) a) a) RunWeight: 20.000000 Delta weight: 21.000000 Resulting state: q
Dequeues tree Tree: f(f(a f(a a)) a) RunWeight: 20.000000 Delta weight: 21.000000 Resulting state: q
For rule q -> f(p p) # 3.000000
Expand for q with Tree: f(f(a f(a a)) a) RunWeight: 20.000000 Delta weight: 21.000000 Resulting state: q
Dequeues tree Tree: f(a f(f(a a) f(a f(f(a a) f(a a))))) RunWeight: 25.000000 Delta weight: 26.000000 Resulting state: q
For rule q -> f(p p) # 3.000000
Expand for q with Tree: f(a f(f(a a) f(a f(f(a a) f(a a))))) RunWeight: 25.000000 Delta weight: 26.000000 Resulting state: q
Dequeues tree Tree: f(a f(f(a a) f(f(f(a a) f(a a)) a))) RunWeight: 25.000000 Delta weight: 26.000000 Resulting state: q
For rule q -> f(p p) # 3.000000
Expand for q with Tree: f(a f(f(a a) f(f(f(a a) f(a a)) a))) RunWeight: 25.000000 Delta weight: 26.000000 Resulting state: q
Dequeues tree Tree: f(a f(a a)) RunWeight: 25.000000 Delta weight: 26.000000 Resulting state: q
For rule q -> f(p p) # 3.000000
Expand for q with Tree: f(a f(a a)) RunWeight: 25.000000 Delta weight: 26.000000 Resulting state: q
Dequeues tree Tree: f(a f(f(a f(f(a a) f(a a))) f(a a))) RunWeight: 25.000000 Delta weight: 26.000000 Resulting state: q
For rule q -> f(p p) # 3.000000
Expand for q with Tree: f(a f(f(a f(f(a a) f(a a))) f(a a))) RunWeight: 25.000000 Delta weight: 26.000000 Resulting state: q
Dequeues tree Tree: f(a f(f(f(f(a a) f(a a)) a) f(a a))) RunWeight: 25.000000 Delta weight: 26.000000 Resulting state: q
For rule q -> f(p p) # 3.000000
Expand for q with Tree: f(a f(f(f(f(a a) f(a a)) a) f(a a))) RunWeight: 25.000000 Delta weight: 26.000000 Resulting state: q
Dequeues tree Tree: f(f(f(a a) f(a f(f(a a) f(a a)))) a) RunWeight: 25.000000 Delta weight: 26.000000 Resulting state: q
For rule q -> f(p p) # 3.000000
Expand for q with Tree: f(f(f(a a) f(a f(f(a a) f(a a)))) a) RunWeight: 25.000000 Delta weight: 26.000000 Resulting state: q
Dequeues tree Tree: f(f(f(a a) f(f(f(a a) f(a a)) a)) a) RunWeight: 25.000000 Delta weight: 26.000000 Resulting state: q
For rule q -> f(p p) # 3.000000
Expand for q with Tree: f(f(f(a a) f(f(f(a a) f(a a)) a)) a) RunWeight: 25.000000 Delta weight: 26.000000 Resulting state: q
Dequeues tree Tree: f(f(a a) a) RunWeight: 25.000000 Delta weight: 26.000000 Resulting state: q
For rule q -> f(p p) # 3.000000
Expand for q with Tree: f(f(a a) a) RunWeight: 25.000000 Delta weight: 26.000000 Resulting state: q
Dequeues tree Tree: f(f(f(a f(f(a a) f(a a))) f(a a)) a) RunWeight: 25.000000 Delta weight: 26.000000 Resulting state: q
For rule q -> f(p p) # 3.000000
Expand for q with Tree: f(f(f(a f(f(a a) f(a a))) f(a a)) a) RunWeight: 25.000000 Delta weight: 26.000000 Resulting state: q
Dequeues tree Tree: f(f(f(f(f(a a) f(a a)) a) f(a a)) a) RunWeight: 25.000000 Delta weight: 26.000000 Resulting state: q
For rule q -> f(p p) # 3.000000
Expand for q with Tree: f(f(f(f(f(a a) f(a a)) a) f(a a)) a) RunWeight: 25.000000 Delta weight: 26.000000 Resulting state: q
Dequeues tree Tree: g(f(f(f(a a) f(a a)) f(f(a a) f(a a)))) RunWeight: 26.000000 Delta weight: 26.000000 Resulting state: final
For rule final -> g(q) # 1.000000
OUTPUT Tree: g(f(f(f(a a) f(a a)) f(f(a a) f(a a)))) RunWeight: 26.000000 Delta weight: 26.000000 Resulting state: final
Expand for final with Tree: g(f(f(f(a a) f(a a)) f(f(a a) f(a a)))) RunWeight: 26.000000 Delta weight: 26.000000 Resulting state: final
Dequeues tree Tree: g(f(a f(f(a a) a))) RunWeight: 21.000000 Delta weight: 21.000000 Resulting state: final
For rule final -> g(q) # 1.000000
OUTPUT Tree: g(f(a f(f(a a) a))) RunWeight: 21.000000 Delta weight: 21.000000 Resulting state: final
Expand for final with Tree: g(f(a f(f(a a) a))) RunWeight: 21.000000 Delta weight: 21.000000 Resulting state: final
AJAJ: current weight=26.000000 new weight=21.000000
Dequeues tree Tree: g(f(a f(a f(a a)))) RunWeight: 21.000000 Delta weight: 21.000000 Resulting state: final
For rule final -> g(q) # 1.000000
OUTPUT Tree: g(f(a f(a f(a a)))) RunWeight: 21.000000 Delta weight: 21.000000 Resulting state: final
Expand for final with Tree: g(f(a f(a f(a a)))) RunWeight: 21.000000 Delta weight: 21.000000 Resulting state: final
Dequeues tree Tree: g(f(f(f(a a) a) a)) RunWeight: 21.000000 Delta weight: 21.000000 Resulting state: final
For rule final -> g(q) # 1.000000
OUTPUT Tree: g(f(f(f(a a) a) a)) RunWeight: 21.000000 Delta weight: 21.000000 Resulting state: final
Expand for final with Tree: g(f(f(f(a a) a) a)) RunWeight: 21.000000 Delta weight: 21.000000 Resulting state: final
Dequeues tree Tree: g(f(f(a f(a a)) a)) RunWeight: 21.000000 Delta weight: 21.000000 Resulting state: final
For rule final -> g(q) # 1.000000
OUTPUT Tree: g(f(f(a f(a a)) a)) RunWeight: 21.000000 Delta weight: 21.000000 Resulting state: final
Expand for final with Tree: g(f(f(a f(a a)) a)) RunWeight: 21.000000 Delta weight: 21.000000 Resulting state: final
Dequeues tree Tree: g(f(a f(f(a a) f(a f(f(a a) f(a a)))))) RunWeight: 26.000000 Delta weight: 26.000000 Resulting state: final
For rule final -> g(q) # 1.000000
OUTPUT Tree: g(f(a f(f(a a) f(a f(f(a a) f(a a)))))) RunWeight: 26.000000 Delta weight: 26.000000 Resulting state: final
Expand for final with Tree: g(f(a f(f(a a) f(a f(f(a a) f(a a)))))) RunWeight: 26.000000 Delta weight: 26.000000 Resulting state: final
Dequeues tree Tree: g(f(a f(f(a a) f(f(f(a a) f(a a)) a)))) RunWeight: 26.000000 Delta weight: 26.000000 Resulting state: final
For rule final -> g(q) # 1.000000
OUTPUT Tree: g(f(a f(f(a a) f(f(f(a a) f(a a)) a)))) RunWeight: 26.000000 Delta weight: 26.000000 Resulting state: final
Expand for final with Tree: g(f(a f(f(a a) f(f(f(a a) f(a a)) a)))) RunWeight: 26.000000 Delta weight: 26.000000 Resulting state: final
Dequeues tree Tree: g(f(a f(a a))) RunWeight: 26.000000 Delta weight: 26.000000 Resulting state: final
For rule final -> g(q) # 1.000000
OUTPUT Tree: g(f(a f(a a))) RunWeight: 26.000000 Delta weight: 26.000000 Resulting state: final
Expand for final with Tree: g(f(a f(a a))) RunWeight: 26.000000 Delta weight: 26.000000 Resulting state: final
Dequeues tree Tree: g(f(a f(f(a f(f(a a) f(a a))) f(a a)))) RunWeight: 26.000000 Delta weight: 26.000000 Resulting state: final
For rule final -> g(q) # 1.000000
OUTPUT Tree: g(f(a f(f(a f(f(a a) f(a a))) f(a a)))) RunWeight: 26.000000 Delta weight: 26.000000 Resulting state: final
Expand for final with Tree: g(f(a f(f(a f(f(a a) f(a a))) f(a a)))) RunWeight: 26.000000 Delta weight: 26.000000 Resulting state: final
Dequeues tree Tree: g(f(a f(f(f(f(a a) f(a a)) a) f(a a)))) RunWeight: 26.000000 Delta weight: 26.000000 Resulting state: final
For rule final -> g(q) # 1.000000
OUTPUT Tree: g(f(a f(f(f(f(a a) f(a a)) a) f(a a)))) RunWeight: 26.000000 Delta weight: 26.000000 Resulting state: final
Expand for final with Tree: g(f(a f(f(f(f(a a) f(a a)) a) f(a a)))) RunWeight: 26.000000 Delta weight: 26.000000 Resulting state: final
Dequeues tree Tree: g(f(f(f(a a) f(a f(f(a a) f(a a)))) a)) RunWeight: 26.000000 Delta weight: 26.000000 Resulting state: final
For rule final -> g(q) # 1.000000
OUTPUT Tree: g(f(f(f(a a) f(a f(f(a a) f(a a)))) a)) RunWeight: 26.000000 Delta weight: 26.000000 Resulting state: final
Expand for final with Tree: g(f(f(f(a a) f(a f(f(a a) f(a a)))) a)) RunWeight: 26.000000 Delta weight: 26.000000 Resulting state: final
Dequeues tree Tree: g(f(f(f(a a) f(f(f(a a) f(a a)) a)) a)) RunWeight: 26.000000 Delta weight: 26.000000 Resulting state: final
For rule final -> g(q) # 1.000000
OUTPUT Tree: g(f(f(f(a a) f(f(f(a a) f(a a)) a)) a)) RunWeight: 26.000000 Delta weight: 26.000000 Resulting state: final
Expand for final with Tree: g(f(f(f(a a) f(f(f(a a) f(a a)) a)) a)) RunWeight: 26.000000 Delta weight: 26.000000 Resulting state: final
Dequeues tree Tree: g(f(f(a a) a)) RunWeight: 26.000000 Delta weight: 26.000000 Resulting state: final
For rule final -> g(q) # 1.000000
OUTPUT Tree: g(f(f(a a) a)) RunWeight: 26.000000 Delta weight: 26.000000 Resulting state: final
Expand for final with Tree: g(f(f(a a) a)) RunWeight: 26.000000 Delta weight: 26.000000 Resulting state: final
Dequeues tree Tree: g(f(f(f(a f(f(a a) f(a a))) f(a a)) a)) RunWeight: 26.000000 Delta weight: 26.000000 Resulting state: final
For rule final -> g(q) # 1.000000
OUTPUT Tree: g(f(f(f(a f(f(a a) f(a a))) f(a a)) a)) RunWeight: 26.000000 Delta weight: 26.000000 Resulting state: final
Expand for final with Tree: g(f(f(f(a f(f(a a) f(a a))) f(a a)) a)) RunWeight: 26.000000 Delta weight: 26.000000 Resulting state: final
Dequeues tree Tree: g(f(f(f(f(f(a a) f(a a)) a) f(a a)) a)) RunWeight: 26.000000 Delta weight: 26.000000 Resulting state: final
For rule final -> g(q) # 1.000000
OUTPUT Tree: g(f(f(f(f(f(a a) f(a a)) a) f(a a)) a)) RunWeight: 26.000000 Delta weight: 26.000000 Resulting state: final
Expand for final with Tree: g(f(f(f(f(f(a a) f(a a)) a) f(a a)) a)) RunWeight: 26.000000 Delta weight: 26.000000 Resulting state: final
Dequeues tree Tree: f(a f(a f(f(a a) f(a a)))) RunWeight: 26.000000 Delta weight: 31.000000 Resulting state: p
For rule p -> f(q q) # 1.000000
Expand for p with Tree: f(a f(a f(f(a a) f(a a)))) RunWeight: 26.000000 Delta weight: 31.000000 Resulting state: p
Dequeues tree Tree: f(a f(f(f(a a) f(a a)) a)) RunWeight: 26.000000 Delta weight: 31.000000 Resulting state: p
For rule p -> f(q q) # 1.000000
Expand for p with Tree: f(a f(f(f(a a) f(a a)) a)) RunWeight: 26.000000 Delta weight: 31.000000 Resulting state: p
Dequeues tree Tree: f(f(a f(f(a a) f(a a))) a) RunWeight: 26.000000 Delta weight: 31.000000 Resulting state: p
For rule p -> f(q q) # 1.000000
Expand for p with Tree: f(f(a f(f(a a) f(a a))) a) RunWeight: 26.000000 Delta weight: 31.000000 Resulting state: p
Dequeues tree Tree: f(f(f(f(a a) f(a a)) a) a) RunWeight: 26.000000 Delta weight: 31.000000 Resulting state: p
For rule p -> f(q q) # 1.000000
Expand for p with Tree: f(f(f(f(a a) f(a a)) a) a) RunWeight: 26.000000 Delta weight: 31.000000 Resulting state: p
Dequeues tree Tree: f(f(f(a a) f(a a)) f(a f(a a))) RunWeight: 30.000000 Delta weight: 31.000000 Resulting state: q
For rule q -> f(p p) # 3.000000
Expand for q with Tree: f(f(f(a a) f(a a)) f(a f(a a))) RunWeight: 30.000000 Delta weight: 31.000000 Resulting state: q
Dequeues tree Tree: f(a f(a f(a f(f(a a) f(a a))))) RunWeight: 30.000000 Delta weight: 31.000000 Resulting state: q
For rule q -> f(p p) # 3.000000
Expand for q with Tree: f(a f(a f(a f(f(a a) f(a a))))) RunWeight: 30.000000 Delta weight: 31.000000 Resulting state: q
Dequeues tree Tree: g(f(f(f(a a) f(a a)) f(a f(a a)))) RunWeight: 31.000000 Delta weight: 31.000000 Resulting state: final
For rule final -> g(q) # 1.000000
OUTPUT Tree: g(f(f(f(a a) f(a a)) f(a f(a a)))) RunWeight: 31.000000 Delta weight: 31.000000 Resulting state: final
g(f(a a)) # 6.000000
g(a) # 11.000000
g(f(a f(f(a a) f(a a)))) # 16.000000
g(f(f(f(a a) f(a a)) a)) # 16.000000
g(f(f(f(a a) f(a a)) f(f(a a) f(a a)))) # 26.000000
g(f(a f(f(a a) a))) # 21.000000
g(f(a f(a f(a a)))) # 21.000000
g(f(f(f(a a) a) a)) # 21.000000
g(f(f(a f(a a)) a)) # 21.000000
g(f(a f(f(a a) f(a f(f(a a) f(a a)))))) # 26.000000
g(f(a f(f(a a) f(f(f(a a) f(a a)) a)))) # 26.000000
g(f(a f(a a))) # 26.000000
g(f(a f(f(a f(f(a a) f(a a))) f(a a)))) # 26.000000
g(f(a f(f(f(f(a a) f(a a)) a) f(a a)))) # 26.000000
g(f(f(f(a a) f(a f(f(a a) f(a a)))) a)) # 26.000000
g(f(f(f(a a) f(f(f(a a) f(a a)) a)) a)) # 26.000000
g(f(f(a a) a)) # 26.000000
g(f(f(f(a f(f(a a) f(a a))) f(a a)) a)) # 26.000000
g(f(f(f(f(f(a a) f(a a)) a) f(a a)) a)) # 26.000000
g(f(f(f(a a) f(a a)) f(a f(a a)))) # 31.000000
BestTrees version 2 took 27 milliseconds
